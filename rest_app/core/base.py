import attr
from rest_app.database_extensions import db
from sqlalchemy.exc import SQLAlchemyError

@attr.s
class IdMixin:
    id: int = attr.ib(default=None)

    def set_id(self, model):
        errors = []
        try:
            if self.id is None:
                db.session.add(model)
            else:
                db.session.merge(model)

            db.session.flush()
            # Assuming the object has an 'id' attribute that gets auto-generated by the database
            print(f"Object saved with ID: {self.id}")
            print(f"Object saved with ID: {model.id}")
            
            self.id = model.id
        except SQLAlchemyError as e:
            # Rollback the transaction if any error occurs
            db.session.rollback()
            print(f"Error occurred while saving object: {e}")

        return errors, model